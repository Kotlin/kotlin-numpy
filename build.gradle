import groovy.json.JsonSlurper
import org.gradle.internal.jvm.Jvm

/*
 * Kotlin library
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'

    // Apply the C plugin to add support for JNI.
    id 'c'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Fat jar
    id 'com.github.johnrengelman.shadow' version '5.2.0'

    id 'maven-publish'

    id "com.jfrog.bintray" version "1.8.4"
}

ext {
    boolean isMerge = isMerge()
    String buildNumber = isMerge ? '' : System.getenv('buildNumber')
    buildNumber += buildNumber == '' ? '' : 'dev1'
    project.version = version + buildNumber
}

apply from: rootProject.file('gradle/python.gradle.kts')

group 'org.jetbrains'
version project.findProperty('version')

repositories {
    jcenter()
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Use the Kotlin test library.
    testImplementation "org.jetbrains.kotlin:kotlin-test"

    // Use the Kotlin JUnit integration.
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xexperimental=org.jetbrains.numkt.core.ExperimentalNumkt"
        freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


jar {
    dependsOn shadowJar
    enabled = false
}

shadowJar {
    classifier = null

    configurations = [project.configurations.compile]

    manifest.attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': version
    )

    metaInf {
        from 'buildScr/python' into 'pythonScript' include('*.py')
    }
}

clean.dependsOn pyClean

localInstallPyPackage.dependsOn wheelBuild

test {
    dependsOn wheelBuild
    systemProperty "java.library.path", file("${buildDir}/libs/ktnumpy").absolutePath
}

build.dependsOn wheelBuild

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenProject(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    publications = ['mavenProject']
    pkg {
        repo = project.name
        name = project.name
        userOrg = 'kotlin'
        licenses = ['Apache-2.0']
        vcsUrl = "https://github.com/Kotlin/${project.name}"
        websiteUrl = "https://github.com/Kotlin/${project.name}"
        issueTrackerUrl = "https://github.com/Kotlin/${project.name}/issues"

        githubRepo = "Kotlin/${project.name}"
        version {
            name = project.version
        }
    }
}

boolean isMerge() {
    def branch = System.getenv("build.branch") as String
    println("Current branch: $branch")
    if (branch != null) {
        return '/merge' in branch
    }
    return false
}
